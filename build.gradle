import com.moowork.gradle.node.task.NodeTask

buildscript {    // Configuration for building
    repositories {
        jcenter()    // Bintray's repository - a fast Maven Central mirror & more
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'    // latest App Engine Gradle tasks
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}

repositories {   // repositories for Jar's you access in your code
    maven {
        url 'https://maven-central.storage.googleapis.com'             // Google's mirror of Maven Central
//   url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT Repository (if needed)
    }
    jcenter()
    mavenCentral()
}

apply plugin: 'groovy'
apply plugin: 'war'                               // standard Web Archive plugin
apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks
apply plugin: "com.moowork.node"

node {
    version = '8.9.1'
    npmVersion = '5.5.1'
    download = true
}

dependencies {
    providedCompile group: 'javax.servlet', name: 'servlet-api', version: '2.5'
    providedCompile 'javax.servlet:jstl:1.2'

    compile 'org.codehaus.groovy:groovy-all:2.4.7'

    compile 'com.google.appengine:appengine:+'
//  compile 'com.google.apis:google-api-services-appengine:+'
    compile 'com.google.appengine:appengine-api-1.0-sdk:+'
    compile 'com.googlecode.objectify:objectify:+'

    compile 'org.ocpsoft.prettytime:prettytime:3.2.5.Final'
    compile 'com.sun.jersey:jersey-client:1.17'
    compile 'com.sun.jersey.contribs:jersey-multipart:1.19.4'

    compile 'org.springframework:spring-context:3.2.18.RELEASE'
    compile 'org.springframework:spring-webmvc:3.2.18.RELEASE'
    compile 'com.fasterxml.jackson.core:jackson-core:2.9.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.1'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

appengine {  // App Engine tasks configuration
    run {
        port = 8080
        jvmFlags = ["-Dappengine.fullscan.seconds=5"]
    }

    deploy {   // deploy configuration
        stopPreviousVersion = true  // default - stop the current version
        promote = true              // default - & make this the current version
    }
}

group = 'pl.mskruch'   // Generated output GroupId
version = '1.0-SNAPSHOT'          // Version in generated output

sourceCompatibility = 1.7  // App Engine Standard uses Java 7
targetCompatibility = 1.7  // App Engine Standard uses Java 7

task webpack(type: NodeTask) {
    script = file('node_modules/webpack/bin/webpack')
    args = ['-p']
}

task reloadApp(type: Copy) {
    dependsOn war

    project.afterEvaluate {
        into project.tasks.explodeWar.explodedAppDirectory
        with war
    }
}

processResources.dependsOn 'webpack'

clean.delete << file('node_modules')
clean.delete << file('src/main/webapp/dist')

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(reloadApp)) {
        webpack.enabled = false
    }
}